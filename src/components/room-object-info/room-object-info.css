.Container {
  transition: 0.5s cubic-bezier(0.38, 1.38, 0.73, 0.98);
  transition-property: transform, opacity;
}

.Title {
  flex: 1 0 auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-transform: capitalize;
}

.Container {
  position: absolute;
  right: calc(78px * 0.5 + 40px);
  left: 50%;
  bottom: 0;
  top: 50%;
}

.DetailHeader {
  display: flex;
}

.DetailHeader .Button {
  flex: 0 0 auto;
  font-size: 1.2rem;
  margin: 0;
  height: 3rem;
  line-height: 3rem;
  box-sizing: border-box;
  transform: translateY(-0.5rem);
  border-radius: 1.5rem;
  padding: 0 2rem;
}

.Info {
  display: flex;
  flex-flow: column;
  flex: 1 1 auto;
}

.InfoFloor,
.InfoWall,
.InfoWallObject {
}

.Property.ModelImages {
  flex: 1 1 auto;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

.Property.ModelImages::-webkit-scrollbar {
  width: 0;
  display: none;
}

.ModelImages {
  flex: 1 0 auto;
  flex-flow: row nowrap;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  margin-bottom: 16px;
}

.ModelImageContainer {
  flex: 0 0 calc(20%);
  box-sizing: border-box;
  border-radius: 6px;
  padding: 6px;
  cursor: pointer;
  border: 1px solid;
  margin-right: 16px;
}

.ModelImageContainer:before {
  content: "";
  float: left;
  padding-bottom: 100%;
}

.ModelImageContainer:last-child {
  margin-right: 0;
}

.ModelImageContainer.selected {
  background: lightgrey;
}

.ModelImage {
  background: center / 90% no-repeat;
  width: 100%;
  height: 100%;
}

.PropertyWrapper {
  display: flex;
  flex-flow: row;
}

.Properties {
  display: flex;
  flex: 1 1 50%;
  flex-flow: column;
  margin-right: 16px;
}

.Properties.Text {
  flex-flow: row;
  font-size: 1.2em;
}

.Properties:last-child {
  margin-right: 0;
}

.Property {
  display: flex;
  font-size: 1.2em;
  flex: 0 0 auto;
  margin-bottom: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid;
}

.InfoFloor .Property {
  border-bottom: 0;
}

.Labels {
  display: flex;
  flex-flow: column;
  flex: 0 0 auto;
  margin-right: 12px;
}

.Inputs {
  display: flex;
  flex-flow: column;
  flex: 1 0 auto;
}

.Label:last-child,
.Input:last-child {
  margin-bottom: 0;
}

.Label {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
  height: 2.5rem;
  line-height: 2.5rem;
}

.Input {
  border: 2px solid;
  border-radius: 1em;
  padding: 0 1.4em;
  font-size: 0.9em;
  position: relative;
  box-sizing: border-box;
  height: 2rem;
  line-height: 2rem;
  margin: 0.25rem 0 0.75rem 0;
}

.Input input {
  position: absolute;
  top: 0;
  left: 20px;
  bottom: 0;
  height: calc(1.8em - 4px);
  text-align: center;
  line-height: calc(1.8em - 4px);
  width: calc(100% - 40px);
  padding: 0;
  background-color: inherit;
  color: inherit;
}

.Buttons {
  display: flex;
  justify-content: center;
  margin-bottom: 1em;
  flex: 0 0 auto;
}

.Button {
  box-sizing: border-box;
  border-radius: 1.5rem;
  height: 2.5rem;
  padding: 0 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 0.5rem;
  font-size: 1.1em;
  cursor: pointer;
  border: 1px solid;
}

.Button.active {
  background-color: lightgrey;
}

.Button:last-child {
  margin-right: 0;
}

.Material {
  flex: 1 0 auto;
  display: flex;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  width: 100%;
}

.Circle {
  width: 100%;
  height: 100%;
}

.Option {
  cursor: pointer;
  position: relative;
  margin-right: 5px;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 auto;
  float: left;
  width: 78px;
  height: 78px;
}

.Circle {
  position: absolute;
  border: 4px solid;
  box-sizing: border-box;
  border-radius: 50%;
  z-index: 50;
}

.Image {
  position: absolute;
  border-radius: 50%;
  background: center / cover no-repeat;
  width: calc(100% - 16px);
  height: calc(100% - 16px);
  overflow: hidden;
  z-index: 40;

  background-color: cyan;
}

@media only screen and (orientation: portrait) and (min-height: 736px) {
  .Container {
    left: calc(78px * 1.5 + 40px);
  }
}

@media only screen and (orientation: landscape) and (max-height: 736px) {
  .Container {
    right: calc((100vh / 4 - 30px) * 0.5 + 25px);
    left: calc((100vh / 4 - 30px) * 1.5 + 50px);
    top: 10%;
  }

  .Buttons,
  .Property {
    margin-bottom: 16px;
  }

  .Option {
    width: calc(100vh / 4 - 30px);
    height: calc(100vh / 4 - 30px);
  }
}

@media only screen and (orientation: portrait) and (max-height: 736px),
  screen and (orientation: portrait) and (max-width: 414px) {
  .Container {
    right: calc(60px * 0.5 + 24px);
    left: calc(60px * 0.5 + 24px);
    top: 31%;
  }

  .ModelImageContainer {
    flex: 0 0 33%;
  }

  .PropertyWrapper {
    flex-flow: column-reverse;
  }

  .ModelImages {
    padding: 0 0 16px 0;
    border-bottom: 1px solid;
  }

  .Properties {
    margin: 16px 0 0 0;
    padding: 16px 0 0 0;
    border-top: 1px solid;
  }

  .Properties:last-child {
    margin: 0;
    padding: 0;
    border-top: 0;
  }

  .Material {
    margin-bottom: 0;
  }

  .Option {
    width: 60px;
    height: 60px;
  }
}
